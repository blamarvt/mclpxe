#!/bin/sh
# (c) Robert Shingledecker 2004-2010
# tcz concept and code from Jason Williams
#
# Example usage:
# tce-load -i /mnt/hda1/tce/optional/nano.tcz   Loads local extension
# tce-load -w -i nano.tcz                       Download into tce/optional directory, updates OnBoot and installs
# tce-load -w nano.tcz                          Download only into tce/optional directory
# Adding -c to any of the -i options will force a one time copy to file system.
# Adding -s to any of the options will suppress OK message used by appbrowser.
. /etc/init.d/tc-functions
#
checknotroot
PROG_NAME=$(basename $0)
KERNELVER=$(uname -r)
unset WGET INSTALL COPYINSTALL BOOTING ONDEMAND DOWNLOAD_ONLY LOAD_ONLY
SAVED_DIR=`pwd`

abort(){
   echo  "Usage: ${PROG_NAME} [ -i -w -wi -wo -wil -ic -wic -wicl]{s} extensions"
   exit 2
}

abort_to_saved_dir(){
   cd "$SAVED_DIR"
   exit 1
}

while getopts wilcbos OPTION
do
  case ${OPTION} in
   w) WGET=TRUE ;;
   i) INSTALL=TRUE ;;
   l) LOAD_ONLY=TRUE ;;
   c) COPYINSTALL=TRUE ;;
   b) BOOTING=TRUE ;;
   o) ONDEMAND=TRUE ;;
   s) SUPPRESS=TRUE ;;
   *) abort ;;
  esac
done
shift `busybox expr $OPTIND - 1`
[ -z "$1" ] || ( [ -z "$WGET" ] && [ -z "$INSTALL" ] ) && abort

push_dep(){
  DEPLIST="$1""/""$DEPLIST"
}
pop_dep(){
  F="${DEPLIST%%/*}"
  DEPLIST="${DEPLIST#*/}"
}

dep_vars(){
  sed -i "s@KERNEL@$KERNELVER@" $1
}

copyInstall() {
   [ -d /mnt/test ] || sudo mkdir -p /mnt/test
   sudo busybox mount $1 /mnt/test -t squashfs -o loop,ro,bs=4096
   if [ "$?" == 0 ]; then
      if [ "$(ls -A /mnt/test)" ]; then
	 yes n | sudo busybox cp -ai /mnt/test/. / 2>/dev/null
	 [ -d /mnt/test/usr/local/lib/modules ] && MODULES=TRUE
      fi
      sudo busybox umount -d /mnt/test
   fi
}

update_system() {
  if [ "$BOOTING" ]; then
    [ "$MODULES" ] && sudo touch /etc/sysconfig/newmodules
  else
    [ "$THISAPP" != "$EXTENSION" ] || [ "$DOWNLOAD_ONLY" ] || [ "$LOAD_ONLY" ] || echo "$THISAPP" >> ../onboot.lst
    if [ "$MODULES" ]; then
      sudo /sbin/depmod -a 2>/dev/null
      sudo /sbin/udevadm trigger
    fi
    sudo /sbin/ldconfig 2>/dev/null
  fi
  if [ -x "$TCEINSTALLED"/$2 ]; then
    if [ "$BOOTING" ] ; then
      echo "$TCEINSTALLED"/$2 >> /tmp/setup.lst
    else
      sudo "$TCEINSTALLED"/$2
    fi
  else
    touch "$TCEINSTALLED"/$2
  fi
}

install(){
  unset MODULES EMPTYEXT

  if [ "$LANG" != "C" ]; then
    LOCALEEXT="${1%.tcz}-locale.tcz"
    [ -f "$LOCALEEXT" ] && install "$LOCALEEXT"
  fi

  THISAPP="$1"
  APPNAME=$(getbasefile "$THISAPP" 1)

  if [ "$INSTALL" ]; then
    if [ "$COPYINSTALL" ] || [ -e "${FROMWHERE%/*}"/copy2fs.flg ] || grep -qw $APPNAME "${FROMWHERE%/*}"/copy2fs.lst 2>/dev/null; then
      copyInstall "$THISAPP"
      update_system "$THISAPP" "$APPNAME"
      if [ ! "$BOOTING" ]; then
	 [ -s /etc/sysconfig/desktop ] && desktop.sh "$APPNAME"
      fi
    else
      [ -d /tmp/tcloop/"$APPNAME" ] || sudo mkdir -p /tmp/tcloop/"$APPNAME"
      awk -v appname="/tmp/tcloop/$APPNAME" ' { if ( $2 == appname )  exit 1 }' /etc/mtab
      [ "$?" == 1 ] || sudo busybox mount "$THISAPP" /tmp/tcloop/"$APPNAME" -t squashfs -o loop,ro,bs=4096 2>&1
      [ "$?" == 0 ] || abort_to_saved_dir
      [ -z "`busybox ls /tmp/tcloop/${APPNAME}`" ] && EMPTYEXT=1

      if [ -z "$EMPTYEXT" ]; then
	yes n | sudo busybox cp -ais /tmp/tcloop/"$APPNAME"/* / 2>/dev/null
	[ -d /tmp/tcloop/"$APPNAME"/usr/local/lib/modules ] && MODULES=TRUE
	update_system "$THISAPP" "$APPNAME"
	if [ ! "$BOOTING" ]; then
	  [ -s /etc/sysconfig/desktop ] && desktop.sh "$APPNAME"
	fi
      else
	busybox umount -d /tmp/tcloop/"$APPNAME"
	update_system "$THISAPP" "$APPNAME"
      fi
    fi
    [ "$BOOTING" ] && [ "$SHOWAPPS" ] && echo -n "${YELLOW}$APPNAME ${NORMAL}"
  fi
}

local_recursive_scan() {
  push_dep ${1}
  deps=""
  if [ -f ${1}.dep ]; then
    deps=`cat ${1}.dep`
    for d in $deps; do
      local_recursive_scan $d
    done
  fi
}

remote_recursive_scan() {
  push_dep ${1}
  deps=""
  deps=`cat "$FROMWHERE"/${1}.dep`
  for d in $deps; do
    push_dep ${d}
    if [ ! -f ${d}.dep ]; then
      busybox wget -c -P "$FROMWHERE" "$MIRROR"/"$d".dep 2>/dev/null
      if [ "$?" == 0 ]; then
	dep_vars ${d}.dep
	[ "$SUPPRESS" ] || echo ${d}.dep OK
	remote_recursive_scan $d
      fi
    else
      remote_recursive_scan $d
    fi
  done
}

# Main
[ -s /opt/.tce_dir ] || exit 1
[ -n "$1" ] || exit 1
[ -f /etc/sysconfig/showapps ] && SHOWAPPS=TRUE && SUPPRESS=TRUE
TCEDIR="$(cat /opt/.tce_dir)"
TCEINSTALLED=/usr/local/tce.installed
#  Check for download only
[ -z "$INSTALL" ] && DOWNLOAD_ONLY=1
[ -z "$WGET" ] && [ "$INSTALL" ] && LOAD_ONLY=1

for TARGETAPP in $@; do

APPNAME=${TARGETAPP%%.tcz}
if [ ${TARGETAPP} == ${APPNAME} ]; then TARGETAPP=${TARGETAPP}.tcz; fi

# If load local or install then also check if already installed.
# Download only OK.
if [ "$INSTALL" ] && [ ! "$BOOTING" ]; then
  if [ -f /usr/local/tce.installed/"${APPNAME##/*/}" ]; then
    echo "$APPNAME is already installed!"
    continue
  fi
fi

if [ "$WGET" ]; then
   if [ -f "$TCEDIR"/optional/"$TARGETAPP" ]; then
     echo "$APPNAME is already downloaded!"
     continue
   fi
   getMirror
   [ -d "$TCEDIR"/optional ] || mkdir -p "$TCEDIR"/optional
   FROMWHERE="$TCEDIR"/optional
   cd "$FROMWHERE"
   EXTENSION=`basename "$TARGETAPP"`

   DEPLIST="$EXTENSION".dep
   busybox wget -cq "$MIRROR"/"$DEPLIST" 2>/dev/null
#------------------------------------------------------------------------------------------
   if [ "$?" == 0 ]; then
      dep_vars $DEPLIST
      DEPLIST=""
      remote_recursive_scan ${EXTENSION}
      pop_dep
      while [ "$F" ]; do
	F="${F##*/}"
	if [ ! -f "$F" ]; then
	   echo "Downloading: $F"
	   busybox wget -cq "$MIRROR"/"$F".md5.txt
	   busybox wget -c "$MIRROR"/"$F"
	   busybox md5sum -c "$F".md5.txt
	   if [ "$?" != 0 ]; then
	      rm -f "$F"*
	      rm -f "$EXTENSION".dep
	      rm -f "$EXTENSION".md5.txt
	      echo "Error on $F"
	      abort_to_saved_dir
	   else
	      install "$F"
	   fi
	else
	   [ ! -f /usr/local/tce.installed/"${F%.tcz}" ] && install "$F"
	fi
	pop_dep
      done
      DEPLIST=""
   else
#--------------------------------------------------------------------------------------------
     echo "Downloading: $EXTENSION"
     busybox wget -cq "$MIRROR"/"$EXTENSION".md5.txt
     busybox wget -c "$MIRROR"/"$EXTENSION"
     busybox md5sum -c "$EXTENSION".md5.txt
     if [ "$?" != 0 ]; then
       rm -f "$TCEDIR"/"$EXTENSION"*
       abort_to_saved_dir
     else
       install "$EXTENSION"
     fi
   fi
   [ "$DOWNLOAD_ONLY" ] && [ "$ONDEMAND" ] && ondemand "$EXTENSION"
fi

# if local install then also check for .dep at the same location.
if [ -z "$WGET" ]; then
   if [ ! -f "$TARGETAPP" ]; then
      if [ -f "$TCEDIR"/optional/"$TARGETAPP" ]; then
	 TARGETAPP="$TCEDIR"/optional/"$TARGETAPP"
      else
	 echo "$TARGETAPP not found!"
	 abort_to_saved_dir
      fi
   fi
   FROMWHERE=`dirname "$TARGETAPP"` && cd "$FROMWHERE"
   EXTENSION=`basename "$TARGETAPP"`
#------------------------------------------------------------------------
   if [ -f "$EXTENSION".dep ]; then
      DEPLIST=""
      local_recursive_scan ${EXTENSION}
      pop_dep
      while [ "$F" ]; do
	F="${F##*/}"
	DEPFILE="$F"
	if [ ! -f /usr/local/tce.installed/"${F%.*}" ]; then
	   if [ -f "$DEPFILE" ]; then
	      install "$DEPFILE"
	      [ "$SUPPRESS" ] || echo "$DEPFILE: OK"
	   else
	      echo "$DEPFILE not found!"
	      abort_to_saved_dir
	   fi
	fi
	pop_dep
      done
   else
#--------------------------------------------------------------------------
     install "$TARGETAPP"
     [ "$SUPPRESS" ] || echo "$TARGETAPP: OK"
   fi
fi

done # Finish the for-loop for multiple extensions
cd "$SAVED_DIR"

[ "$BOOTING" ] && exit 0
[ $(which "$DESKTOP"_restart) ] && "$DESKTOP"_restart 2>/dev/null
exit 0
